databaseChangeLog {
  // create initial database schema
  changeSet(author: 'kenneth.shaw@knq.io', id: 'create-schema') {
    // create roles table
    createTable(tableName: 'roles') {
      column(name: 'id', type: 'varchar') {
        constraints(nullable: false, primaryKey: true, deleteCascade: true)
      }
      column(name: 'name', type: 'varchar') {
        constraints(nullable: false, unique: true)
      }
      column(name: 'permissions', type: 'blob')
    }

    // create people table
    createTable(tableName: 'people') {
      column(name: 'id', type: 'varchar') {
        constraints(nullable: false, primaryKey: true, deleteCascade: true)
      }
      column(name: 'name', type: 'varchar') {
        constraints(nullable: false, unique: true)
      }
      column(name: 'apppassword', type: 'varchar')
      column(name: 'card', type: 'varchar')
      column(name: 'role', type: 'varchar') {
        constraints(nullable: false, references: 'roles', foreignKeyName: 'fk_people_roles')
      }
      column(name: 'visible', type: 'boolean') {
        constraints(nullable: false)
      }
      column(name: 'image', type: 'blob')
    }
    createIndex(tableName: 'people', indexName: 'people_card_idx') {
      column(name: 'card')
    }

    // create resources table
    createTable(tableName: 'resources') {
      column(name: 'id', type: 'varchar') {
        constraints(nullable: false, primaryKey: true, deleteCascade: true)
      }
      column(name: 'name', type: 'varchar') {
        constraints(nullable: false, unique: true)
      }
      column(name: 'restype', type: 'integer') {
        constraints(nullable: false)
      }
      column(name: 'content', type: 'blob')
    }

    // create taxcustcategories table
    createTable(tableName: 'taxcustcategories') {
      column(name: 'id', type: 'varchar') {
        constraints(nullable: false, primaryKey: true, deleteCascade: true)
      }
      column(name: 'name', type: 'varchar') {
        constraints(nullable: false, unique: true)
      }
    }

    // ceate customers table
    createTable(tableName: 'customers') {
      column(name: 'id', type: 'varchar') {
        constraints(nullable: false, primaryKey: true, deleteCascade: true)
      }
      column(name: 'searchkey', type: 'varchar') {
        constraints(nullable: false, unique: true)
      }
      column(name: 'taxid', type: 'varchar')
      column(name: 'name', type: 'varchar') {
        constraints(nullable: false)
      }
      column(name: 'taxcategory', type: 'varchar') {
        constraints(nullable: false, references: 'taxcustcategories', foreignKeyName: 'fk_customers_taxcustcategories')
      }
      column(name: 'card', type: 'varchar')
      column(name: 'maxdebt', type: 'double', defaultValue: 0) {
        constraints(nullable: false)
      }
      column(name: 'address', type: 'varchar')
      column(name: 'address2', type: 'varchar')
      column(name: 'postal', type: 'varchar')
      column(name: 'city', type: 'varchar')
      column(name: 'region', type: 'varchar')
      column(name: 'country', type: 'varchar')
      column(name: 'firstname', type: 'varchar')
      column(name: 'lastname', type: 'varchar')
      column(name: 'email', type: 'varchar')
      column(name: 'phone', type: 'varchar')
      column(name: 'phone2', type: 'varchar')
      column(name: 'fax', type: 'varchar')
      column(name: 'notes', type: 'varchar')
      column(name: 'visible', type: 'boolean', defaultValue: true) {
        constraints(nullable: false)
      }
      column(name: 'curdate', type: 'timestamp')
      column(name: 'curdebt', type: 'double', defaultValue: 0)
      column(name: 'image', type: 'blob')
    }
    createIndex(tableName: 'customers', indexName: 'customers_searchkey_idx') {
      column(name: 'searchkey')
    }
    createIndex(tableName: 'customers', indexName: 'customers_taxid_idx') {
      column(name: 'taxid')
    }
    createIndex(tableName: 'customers', indexName: 'customers_name_idx') {
      column(name: 'name')
    }
    createIndex(tableName: 'customers', indexName: 'customers_card_idx') {
      column(name: 'card')
    }


  }
}








//CREATE TABLE CATEGORIES (
//    ID VARCHAR NOT NULL,
//    NAME VARCHAR NOT NULL,
//    PARENTID VARCHAR,
//    IMAGE BYTEA,
//    TEXTTIP VARCHAR DEFAULT NULL,
//    CATSHOWNAME BOOLEAN NOT NULL DEFAULT TRUE,
//    PRIMARY KEY (ID),
//    CONSTRAINT CATEGORIES_FK_1 FOREIGN KEY (PARENTID) REFERENCES CATEGORIES(ID)
//);
//CREATE UNIQUE INDEX CATEGORIES_NAME_IDX ON CATEGORIES(NAME);



//CREATE TABLE TAXCATEGORIES (
//    ID VARCHAR NOT NULL,
//    NAME VARCHAR NOT NULL,
//    PRIMARY KEY (ID)
//);
//CREATE UNIQUE INDEX TAXCAT_NAME_IDX ON TAXCATEGORIES(NAME);



//CREATE TABLE TAXES (
//    ID VARCHAR NOT NULL,
//    NAME VARCHAR NOT NULL,
//    CATEGORY VARCHAR NOT NULL,
//    CUSTCATEGORY VARCHAR,
//    PARENTID VARCHAR,
//    RATE DOUBLE PRECISION DEFAULT 0 NOT NULL,
//    RATECASCADE BOOLEAN NOT NULL DEFAULT FALSE,
//    RATEORDER INTEGER,
//    PRIMARY KEY (ID),
//    CONSTRAINT TAXES_CAT_FK FOREIGN KEY (CATEGORY) REFERENCES TAXCATEGORIES(ID),
//    CONSTRAINT TAXES_CUSTCAT_FK FOREIGN KEY (CUSTCATEGORY) REFERENCES TAXCUSTCATEGORIES(ID),
//    CONSTRAINT TAXES_TAXES_FK FOREIGN KEY (PARENTID) REFERENCES TAXES(ID)
//);
//CREATE UNIQUE INDEX TAXES_NAME_IDX ON TAXES(NAME);

//CREATE TABLE ATTRIBUTE (
//    ID VARCHAR NOT NULL,
//    NAME VARCHAR NOT NULL,
//    PRIMARY KEY (ID)
//);

//CREATE TABLE ATTRIBUTEVALUE (
//    ID VARCHAR NOT NULL,
//    ATTRIBUTE_ID VARCHAR NOT NULL,
//    VALUE VARCHAR,
//    PRIMARY KEY (ID),
//    CONSTRAINT ATTVAL_ATT FOREIGN KEY (ATTRIBUTE_ID) REFERENCES ATTRIBUTE(ID) ON DELETE CASCADE
//);

//CREATE TABLE ATTRIBUTESET (
//    ID VARCHAR NOT NULL,
//    NAME VARCHAR NOT NULL,
//    PRIMARY KEY (ID)
//);

//CREATE TABLE ATTRIBUTEUSE (
//    ID VARCHAR NOT NULL,
//    ATTRIBUTESET_ID VARCHAR NOT NULL,
//    ATTRIBUTE_ID VARCHAR NOT NULL,
//    LINENO INTEGER,
//    PRIMARY KEY (ID),
//    CONSTRAINT ATTUSE_SET FOREIGN KEY (ATTRIBUTESET_ID) REFERENCES ATTRIBUTESET(ID) ON DELETE CASCADE,
//    CONSTRAINT ATTUSE_ATT FOREIGN KEY (ATTRIBUTE_ID) REFERENCES ATTRIBUTE(ID)
//);
//CREATE UNIQUE INDEX ATTUSE_LINE ON ATTRIBUTEUSE(ATTRIBUTESET_ID, LINENO);



//CREATE TABLE ATTRIBUTESETINSTANCE (
//    ID VARCHAR NOT NULL,
//    ATTRIBUTESET_ID VARCHAR NOT NULL,
//    DESCRIPTION VARCHAR,
//    PRIMARY KEY (ID),
//    CONSTRAINT ATTSETINST_SET FOREIGN KEY (ATTRIBUTESET_ID) REFERENCES ATTRIBUTESET(ID) ON DELETE CASCADE
//);



//CREATE TABLE ATTRIBUTEINSTANCE (
//    ID VARCHAR NOT NULL,
//    ATTRIBUTESETINSTANCE_ID VARCHAR NOT NULL,
//    ATTRIBUTE_ID VARCHAR NOT NULL,
//    VALUE VARCHAR,
//    PRIMARY KEY (ID),
//    CONSTRAINT ATTINST_SET FOREIGN KEY (ATTRIBUTESETINSTANCE_ID) REFERENCES ATTRIBUTESETINSTANCE(ID) ON DELETE CASCADE,
//    CONSTRAINT ATTINST_ATT FOREIGN KEY (ATTRIBUTE_ID) REFERENCES ATTRIBUTE(ID)
//);



//CREATE TABLE PRODUCTS (
//    ID VARCHAR NOT NULL,
//    REFERENCE VARCHAR NOT NULL,
//    CODE VARCHAR NOT NULL,
//    CODETYPE VARCHAR,
//    NAME VARCHAR NOT NULL,
//    PRICEBUY DOUBLE PRECISION DEFAULT 0 NOT NULL,
//    PRICESELL DOUBLE PRECISION DEFAULT 0 NOT NULL,
//    CATEGORY VARCHAR NOT NULL,
//    TAXCAT VARCHAR NOT NULL,
//    ATTRIBUTESET_ID VARCHAR,
//    STOCKCOST DOUBLE PRECISION,
//    STOCKVOLUME DOUBLE PRECISION,
//    IMAGE BYTEA,
//    ISCOM BOOLEAN NOT NULL DEFAULT FALSE,
//    ISSCALE BOOLEAN NOT NULL DEFAULT FALSE,
//    ISKITCHEN BOOLEAN NOT NULL DEFAULT FALSE,
//    PRINTKB BOOLEAN NOT NULL DEFAULT FALSE,
//    SENDSTATUS BOOLEAN NOT NULL DEFAULT FALSE,
//    ISSERVICE BOOLEAN NOT NULL DEFAULT FALSE,
//    DISPLAY VARCHAR,
//    ATTRIBUTES BYTEA,
//    ISVPRICE BOOLEAN NOT NULL DEFAULT FALSE,
//    ISVERPATRIB BOOLEAN NOT NULL DEFAULT FALSE,
//    TEXTTIP VARCHAR DEFAULT '',
//    WARRANTY BOOLEAN NOT NULL DEFAULT FALSE,
//    STOCKUNITS DOUBLE PRECISION DEFAULT 0 NOT NULL,
//    PRIMARY KEY (ID),
//    CONSTRAINT PRODUCTS_FK_1 FOREIGN KEY (CATEGORY) REFERENCES CATEGORIES(ID),
//    CONSTRAINT PRODUCTS_TAXCAT_FK FOREIGN KEY (TAXCAT) REFERENCES TAXCATEGORIES(ID),
//    CONSTRAINT PRODUCTS_ATTRSET_FK FOREIGN KEY (ATTRIBUTESET_ID) REFERENCES ATTRIBUTESET(ID)
//);
//CREATE UNIQUE INDEX PRODUCTS_IDX_0 ON PRODUCTS(REFERENCE);
//CREATE UNIQUE INDEX PRODUCTS_IDX_1 ON PRODUCTS(CODE);
//CREATE UNIQUE INDEX PRODUCTS_NAME_IDX ON PRODUCTS(NAME);



//CREATE TABLE PRODUCTS_CAT (
//    PRODUCT VARCHAR NOT NULL,
//    CATORDER INTEGER,
//    PRIMARY KEY (PRODUCT),
//    CONSTRAINT PRODUCTS_CAT_FK_1 FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS(ID)
//);
//CREATE INDEX PRODUCTS_CAT_IDX_1 ON PRODUCTS_CAT(CATORDER);

//CREATE TABLE PRODUCTS_COM (
//    ID VARCHAR NOT NULL,
//    PRODUCT VARCHAR NOT NULL,
//    PRODUCT2 VARCHAR NOT NULL,
//    PRIMARY KEY (ID),
//    CONSTRAINT PRODUCTS_COM_FK_1 FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS(ID),
//    CONSTRAINT PRODUCTS_COM_FK_2 FOREIGN KEY (PRODUCT2) REFERENCES PRODUCTS(ID)
//);
//CREATE UNIQUE INDEX PCOM_IDX_PROD ON PRODUCTS_COM(PRODUCT, PRODUCT2);



//CREATE TABLE LOCATIONS (
//    ID VARCHAR NOT NULL,
//    NAME VARCHAR NOT NULL,
//    ADDRESS VARCHAR,
//    PRIMARY KEY (ID)
//);
//CREATE UNIQUE INDEX LOCATIONS_NAME_IDX ON LOCATIONS(NAME);



//CREATE TABLE STOCKDIARY (
//    ID VARCHAR NOT NULL,
//    DATENEW TIMESTAMP NOT NULL,
//    REASON INTEGER NOT NULL,
//    LOCATION VARCHAR NOT NULL,
//    PRODUCT VARCHAR NOT NULL,
//    ATTRIBUTESETINSTANCE_ID VARCHAR,
//    UNITS DOUBLE PRECISION NOT NULL,
//    PRICE DOUBLE PRECISION NOT NULL,
//    APPUSER VARCHAR,
//    PRIMARY KEY (ID),
//    CONSTRAINT STOCKDIARY_FK_1 FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS(ID),
//    CONSTRAINT STOCKDIARY_ATTSETINST FOREIGN KEY (ATTRIBUTESETINSTANCE_ID) REFERENCES ATTRIBUTESETINSTANCE(ID),
//    CONSTRAINT STOCKDIARY_FK_2 FOREIGN KEY (LOCATION) REFERENCES LOCATIONS(ID)
//);
//CREATE INDEX STOCKDIARY_IDX_1 ON STOCKDIARY(DATENEW);
//
//CREATE TABLE STOCKLEVEL (
//    ID VARCHAR NOT NULL,
//    LOCATION VARCHAR NOT NULL,
//    PRODUCT VARCHAR NOT NULL,
//    STOCKSECURITY DOUBLE PRECISION DEFAULT 0 NOT NULL,
//    STOCKMAXIMUM DOUBLE PRECISION DEFAULT 0 NOT NULL,
//    PRIMARY KEY (ID),
//    CONSTRAINT STOCKLEVEL_PRODUCT FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS(ID),
//    CONSTRAINT STOCKLEVEL_LOCATION FOREIGN KEY (LOCATION) REFERENCES LOCATIONS(ID)
//);
//
//CREATE TABLE STOCKCURRENT (
//    LOCATION VARCHAR NOT NULL,
//    PRODUCT VARCHAR NOT NULL,
//    ATTRIBUTESETINSTANCE_ID VARCHAR,
//    UNITS DOUBLE PRECISION DEFAULT 0 NOT NULL,
//    CONSTRAINT STOCKCURRENT_FK_1 FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS(ID),
//    CONSTRAINT STOCKCURRENT_ATTSETINST FOREIGN KEY (ATTRIBUTESETINSTANCE_ID) REFERENCES ATTRIBUTESETINSTANCE(ID),
//    CONSTRAINT STOCKCURRENT_FK_2 FOREIGN KEY (LOCATION) REFERENCES LOCATIONS(ID)
//);
//CREATE UNIQUE INDEX STOCKCURRENT_IDX ON STOCKCURRENT(LOCATION, PRODUCT, ATTRIBUTESETINSTANCE_ID);
//
//CREATE TABLE CLOSEDCASH (
//    MONEY VARCHAR NOT NULL,
//    HOST VARCHAR NOT NULL,
//    HOSTSEQUENCE INTEGER NOT NULL,
//    DATESTART TIMESTAMP NOT NULL,
//    DATEEND TIMESTAMP,
//    NOSALES INTEGER DEFAULT 0 NOT NULL,
//    PRIMARY KEY(MONEY)
//);
//CREATE INDEX CLOSEDCASH_IDX_1 ON CLOSEDCASH(DATESTART);
//CREATE UNIQUE INDEX CLOSEDCASH_IDX_SEQ ON CLOSEDCASH(HOST, HOSTSEQUENCE);
//
//CREATE TABLE RECEIPTS (
//    ID VARCHAR NOT NULL,
//    MONEY VARCHAR NOT NULL,
//    DATENEW TIMESTAMP NOT NULL,
//    ATTRIBUTES BYTEA,
//    PERSON VARCHAR,
//    PRIMARY KEY (ID),
//CONSTRAINT RECEIPTS_FK_MONEY FOREIGN KEY (MONEY) REFERENCES CLOSEDCASH(MONEY)
//);
//CREATE INDEX RECEIPTS_IDX_1 ON RECEIPTS(DATENEW);
//
//CREATE TABLE TICKETS (
//    ID VARCHAR NOT NULL,
//    TICKETTYPE INTEGER DEFAULT 0 NOT NULL,
//    TICKETID INTEGER NOT NULL,
//    PERSON VARCHAR NOT NULL,
//    CUSTOMER VARCHAR,
//    STATUS INTEGER DEFAULT 0 NOT NULL,
//    PRIMARY KEY (ID),
//    CONSTRAINT TICKETS_FK_ID FOREIGN KEY (ID) REFERENCES RECEIPTS(ID),
//    CONSTRAINT TICKETS_FK_2 FOREIGN KEY (PERSON) REFERENCES PEOPLE(ID),
//    CONSTRAINT TICKETS_CUSTOMERS_FK FOREIGN KEY (CUSTOMER) REFERENCES CUSTOMERS(ID)
//);
//CREATE INDEX TICKETS_TICKETID ON TICKETS(TICKETTYPE, TICKETID);
//
//CREATE SEQUENCE TICKETSNUM START WITH 1;
//CREATE SEQUENCE TICKETSNUM_REFUND START WITH 1;
//CREATE SEQUENCE TICKETSNUM_PAYMENT START WITH 1;
//
//
//CREATE TABLE TICKETLINES (
//    TICKET VARCHAR NOT NULL,
//    LINE INTEGER NOT NULL,
//    PRODUCT VARCHAR,
//    ATTRIBUTESETINSTANCE_ID VARCHAR,
//    UNITS DOUBLE PRECISION NOT NULL,
//    PRICE DOUBLE PRECISION NOT NULL,
//    TAXID VARCHAR NOT NULL,
//    ATTRIBUTES BYTEA,
//    PRIMARY KEY (TICKET, LINE),
//    CONSTRAINT TICKETLINES_FK_TICKET FOREIGN KEY (TICKET) REFERENCES TICKETS(ID),
//    CONSTRAINT TICKETLINES_FK_2 FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS(ID),
//    CONSTRAINT TICKETLINES_ATTSETINST FOREIGN KEY (ATTRIBUTESETINSTANCE_ID) REFERENCES ATTRIBUTESETINSTANCE(ID),
//    CONSTRAINT TICKETLINES_FK_3 FOREIGN KEY (TAXID) REFERENCES TAXES(ID)
//);
//
// CREATE TABLE LINEREMOVED (
//  REMOVEDDATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
//  NAME VARCHAR DEFAULT NULL,
//  TICKETID VARCHAR DEFAULT NULL,
//  PRODUCTID VARCHAR DEFAULT NULL,
//  PRODUCTNAME VARCHAR DEFAULT NULL,
//  UNITS DOUBLE PRECISION NOT NULL
//);
//
//CREATE TABLE PAYMENTS (
//    ID VARCHAR NOT NULL,
//    RECEIPT VARCHAR NOT NULL,
//    PAYMENT VARCHAR NOT NULL,
//    TOTAL DOUBLE PRECISION NOT NULL,
//    TRANSID VARCHAR,
//    NOTES VARCHAR,
//    RETURNMSG BYTEA,
//    TENDERED DOUBLE PRECISION DEFAULT 0 NOT NULL,
//    CARDNAME VARCHAR,
//    PRIMARY KEY (ID),
//    CONSTRAINT PAYMENTS_FK_RECEIPT FOREIGN KEY (RECEIPT) REFERENCES RECEIPTS(ID)
//);
//CREATE INDEX PAYMENTS_IDX_1 ON PAYMENTS(PAYMENT);
//
//CREATE TABLE TAXLINES (
//    ID VARCHAR NOT NULL,
//    RECEIPT VARCHAR NOT NULL,
//    TAXID VARCHAR NOT NULL,
//    BASE DOUBLE PRECISION DEFAULT 0 NOT NULL,
//    AMOUNT DOUBLE PRECISION DEFAULT 0 NOT NULL,
//    PRIMARY KEY (ID),
//    CONSTRAINT TAXLINES_TAX FOREIGN KEY (TAXID) REFERENCES TAXES(ID),
//    CONSTRAINT TAXLINES_RECEIPT FOREIGN KEY (RECEIPT) REFERENCES RECEIPTS(ID)
//);
//
//CREATE TABLE FLOORS (
//    ID VARCHAR NOT NULL,
//    NAME VARCHAR NOT NULL,
//    IMAGE BYTEA,
//    PRIMARY KEY (ID)
//);
//CREATE UNIQUE INDEX FLOORS_NAME_IDX ON FLOORS(NAME);
//
//CREATE TABLE PLACES (
//    ID VARCHAR NOT NULL,
//    NAME VARCHAR NOT NULL,
//    X INTEGER NOT NULL,
//    Y INTEGER NOT NULL,
//    FLOOR VARCHAR NOT NULL,
//    CUSTOMER VARCHAR,
//    WAITER VARCHAR,
//    TICKETID VARCHAR,
//    TABLEMOVED BOOLEAN NOT NULL DEFAULT FALSE,
//    PRIMARY KEY (ID),
//    CONSTRAINT PLACES_FK_1 FOREIGN KEY (FLOOR) REFERENCES FLOORS(ID)
//);
//CREATE UNIQUE INDEX PLACES_NAME_IDX ON PLACES(NAME);
//
//CREATE TABLE RESERVATIONS (
//    ID VARCHAR NOT NULL,
//    CREATED TIMESTAMP NOT NULL,
//    DATENEW TIMESTAMP DEFAULT '2013-01-01 00:00:00' NOT NULL,
//    TITLE VARCHAR NOT NULL,
//    CHAIRS INTEGER NOT NULL,
//    ISDONE BOOLEAN NOT NULL,
//    DESCRIPTION VARCHAR,
//    PRIMARY KEY (ID)
//);
//CREATE INDEX RESERVATIONS_IDX_1 ON RESERVATIONS(DATENEW);
//
//CREATE TABLE RESERVATION_CUSTOMERS (
//    ID VARCHAR NOT NULL,
//    CUSTOMER VARCHAR NOT NULL,
//    PRIMARY KEY (ID),
//    CONSTRAINT RES_CUST_FK_1 FOREIGN KEY (ID) REFERENCES RESERVATIONS(ID),
//    CONSTRAINT RES_CUST_FK_2 FOREIGN KEY (CUSTOMER) REFERENCES CUSTOMERS(ID)
//);
//
//CREATE TABLE THIRDPARTIES (
//    ID VARCHAR NOT NULL,
//    CIF VARCHAR NOT NULL,
//    NAME VARCHAR NOT NULL,
//    ADDRESS VARCHAR,
//    CONTACTCOMM VARCHAR,
//    CONTACTFACT VARCHAR,
//    PAYRULE VARCHAR,
//    FAXNUMBER VARCHAR,
//    PHONENUMBER VARCHAR,
//    MOBILENUMBER VARCHAR,
//    EMAIL VARCHAR,
//    WEBPAGE VARCHAR,
//    NOTES VARCHAR,
//    PRIMARY KEY (ID)
//);
//CREATE UNIQUE INDEX THIRDPARTIES_CIF_IDX ON THIRDPARTIES(CIF);
//CREATE UNIQUE INDEX THIRDPARTIES_NAME_IDX ON THIRDPARTIES(NAME);
//
//CREATE TABLE SHAREDTICKETS (
//    ID VARCHAR NOT NULL,
//    NAME VARCHAR NOT NULL,
//    CONTENT BYTEA,
//    PICKUPID INTEGER NOT NULL DEFAULT 0,
//    APPUSER VARCHAR,
//    PRIMARY KEY (ID)
//);
//
//-- Added for Employee Presence Management
//CREATE TABLE SHIFTS (
//  ID VARCHAR NOT NULL,
//  STARTSHIFT TIMESTAMP NOT NULL,
//  ENDSHIFT TIMESTAMP,
//  PPLID VARCHAR NOT NULL,
//  PRIMARY KEY (ID)
//);
//
//CREATE TABLE LEAVES (
//  ID VARCHAR NOT NULL,
//  PPLID VARCHAR NOT NULL,
//  NAME VARCHAR NOT NULL,
//  STARTDATE TIMESTAMP NOT NULL,
//  ENDDATE TIMESTAMP NOT NULL,
//  NOTES VARCHAR,
//  PRIMARY KEY (ID),
//  CONSTRAINT lEAVES_PPLID FOREIGN KEY (PPLID) REFERENCES PEOPLE(ID)
//);
//
//CREATE TABLE BREAKS (
//  ID VARCHAR NOT NULL,
//  NAME VARCHAR NOT NULL,
//  NOTES VARCHAR,
//  VISIBLE BOOLEAN NOT NULL,
//  PRIMARY KEY (ID)
//);
//
//CREATE TABLE SHIFT_BREAKS (
//  ID VARCHAR NOT NULL,
//  SHIFTID VARCHAR NOT NULL,
//  BREAKID VARCHAR NOT NULL,
//  STARTTIME TIMESTAMP NOT NULL,
//  ENDTIME TIMESTAMP,
//  PRIMARY KEY (ID),
//  CONSTRAINT SHIFT_BREAKS_BREAKID FOREIGN KEY (BREAKID) REFERENCES BREAKS(ID),
//  CONSTRAINT SHIFT_BREAKS_SHIFTID FOREIGN KEY (SHIFTID) REFERENCES SHIFTS(ID)
//);
//
//CREATE TABLE CSVIMPORT (
//  ID VARCHAR NOT NULL,
//  ROWNUMBER VARCHAR,
//  CSVERROR VARCHAR,
//  REFERENCE VARCHAR,
//  CODE VARCHAR,
//  NAME VARCHAR,
//  PRICEBUY DOUBLE PRECISION,
//  PRICESELL DOUBLE PRECISION,
//  PREVIOUSBUY DOUBLE PRECISION,
//  PREVIOUSSELL DOUBLE PRECISION,
//  CATEGORY VARCHAR,
//  PRIMARY KEY (ID)
//);
//
//CREATE SEQUENCE PICKUP_NUMBER START WITH 1;
//
//CREATE TABLE DRAWEROPENED (
//  OPENDATE TIMESTAMP DEFAULT NOW(),
//  NAME VARCHAR,
//  TICKETID VARCHAR
//);
